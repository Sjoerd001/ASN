#!/bin/bash

if [ ! $1 ]; then 
    echo "No input-file given"
    exit
else
    ipfile=$1
fi

#echo $@; exit

[ $2 ] && sourcedir=$2 || sourcedir=$(pwd)
[ $3 ] && basedir=$3 || basedir=$(pwd)
[ $4 ] && tmpdir=$4 || tmpdir=/tmp
[ "$5" = "1" ] && debug=1 || debug=0
#[ $3 ] && tpldir=$3 || tpldir=$basedir/tpl
#[ $4 ] && tabledir=$4 || tabledir=$basedir/table
#[ $5 ] && providerdir=$5 ||  providerdir=$basedir/provider

tpldir=$basedir/tpl
tabledir=$basedir/table
providerdir=$basedir/provider

# Info: https://superuser.com/questions/810853/how-do-i-block-a-host-by-asn-example-as16276
# Direct ASN iplist download (add &api=1 to download .txt file else its all html)
# https://www.enjen.net/asn-blocklist/index.php?asn=AS36352&type=htaccess&api=1
#
# More at: http://www.iana.org/assignments/as-numbers/as-numbers.xhtml

if [ "$debug" = "1" ]; then
    echo "          File: $ipfile"
    echo "     Sourcedir: $sourcedir"
    echo "Destinationdir: $basedir"
    echo "   Templatedir: $tpldir"
    echo "      Tabledir: $tabledir"
    echo "   Providerdir: $providerdir"
    echo "       Tempdir: $tmpdir"
fi

#exit

# Got Digital Ocean from:
# http://www.uceprotect.net/en/rblcheck.php (ASN check 14061)

#Remove tabs at beginning of lines
#cat Digital-Ocean | sed 's/	//g' > Digital-Ocean1
#Remove spaces at beginning of lines
#cat Digital-Ocean1 | sed 's/ //g' > Digital-Ocean2
#Remove empty lines
#cat Digital-Ocean2 | sed 's/ .//' > Digital-Ocean1
#Remove extensions after ips
#cat Digital-Ocean1 | sed 's/WARNING//g' > Digital-Ocean2
#cat Digital-Ocean2 | sed 's/NOTLISTED//g' > Digital-Ocean1
#cat Digital-Ocean1 | sed 's/ATTENTION//g' > Digital-Ocean2
#cat Digital-Ocean2 | sed 's/LISTED//g' > Digital-Ocean1

unset IFS


infoline=`cat $sourcedir/$ipfile | grep "Informations" | sed 's/ *//'`

# Check if there actually an AS number exist. Else make one up.
if [ "$infoline" == "Informations for" ]; then
    infoline="$infoline $ipfile - Unknown or Private, XX"
fi
networks=`cat $sourcedir/$ipfile | grep "Networks are assigned to you" | sed 's/ *//' | cut -d' ' -f1`
[ $networks == "Networks" ] && networks=0
#arr=($infoline)
#echo ${arr[0]}
#echo ${arr[1]}
#asn=${arr[2]}
asn=$(echo $infoline|cut -d' ' -f3)
echo "$infoline ($networks networks)" | sed 's/Informations for /Processing: /g'
if [ "${infoline: -4:1}" = "," ]; then
    country=${infoline: -2}
    [ "$country" = "XX" ] && country="@@"
else
    country="@@"
fi
#echo "($asn)::ipc:$country"

provider=`echo $infoline | cut -d' ' -f5- | sed -r 's/.{3}$//' | sed 's/,$//' `

if [ "$debug" = "1" ] ; then
    echo "Processing file $ipfile ( $infoline )"
    echo "ASN: $asn"
    echo "Country: $country"
    echo "Provider: $provider"
    echo "Total of $networks networks assigned"
    echo "Infoline: $infoline"
    echo "Networks: $networks"
fi

#exit

#Most in one-line
# awk    - remove extra spaces and tabs
# sed(1) - remove traling spaces left and redundant lines
# sed(2) - remove empty lines
#awk '{$2=$2};1' $ifile | sed 's/\s*$//' | sed '/^$/d'
#cat $ipfile | sed -e 's/	//g;s/ //g;s/ .//;s/WARNING//g;s/NOTLISTED//g;s/ATTENTION//g;s/LISTED//g' > $tmpdir/$asn.tmp
# https://stackoverflow.com/questions/9541867/sed-delete-lines-not-containing-specific-string
cat $sourcedir/$ipfile | sed -e 's/\s*$//;s/Subnet\ -\ //g;s/ALERT//g;s/NOT//g;s/WARNING//g;s/ATTENTION//g;s/LISTED//g' > $tmpdir/$asn.tmp
# Debug. Make copy on disk on current folder
#cp -f $tmpdir/$asn.tmp ./asn.tmp
# awk '{$2=$2};1' | sed -e 's/\s*$//;s/NOT//g;s/WARNING//g;s/ATTENTION//g;s/LISTED//g' | sed '/^$/d' | sed '/\.\|Informations\|Networks\|UCE\|within\|by Impacts\|WARNING\|PROBLEM|\TO PREVENT/!d' > $tmpdir/$asn.tmp

#echo "$tmpdir/$asn.tmp > $sourcedir/$ipfile"
#alias cp='cp'; cp -f $tmpdir/$asn.tmp > $sourcedir/$ipfile # Doesnt work. WHY????

#Extract subnets if exists
#if grep -q "Subnet" $tmpdir/$asn.tmp; then
#cat<<EOF>$tpldir/$asn.sub
##########################################################################"
# $infoline - Subnets"
##########################################################################"
#$(cat $tmpdir/$asn.tmp | grep 'Subnet' | sed 's/Subnet\ -\ //g' | sort -V)
#EOF
#ln -fs -t "$providerdir"  "$tpldir/$ipfile-subnet.tpl" "$provider-subnet.lst"
#ln -fs -T $tpldir/$asn.sub $providerdir/subnets/"$country - $asn - $provider"
#[ "$debug" = "1" ] && echo "Sub: $tpldir/$asn.sub $providerdir/subnets/"$country - $asn - $provider""
#fi

#echo "Old: $networks"
#Extract ips from file
asniplist=$(cat $tmpdir/$asn.tmp | grep -E -o '([0-9]{1,3}\.){3}[0-9]{1,3}/[0-9]{1,2}' | sort -u -V) #'
asniplistv6=$(cat $tmpdir/$asn.tmp | grep -E '(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]).){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]).){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))' | sort -u -V) #'
#grep -E -o '([0-9a-fA-F]{1,4}\:){8}[0-9a-fA-F]{1,4}/[0-9]{1,3}' | sort -V) #'
#echo $(echo $asniplist) | awk -F, '{print }' RS='[[:space:]]+'
networksv4=$(IFS=' '; echo $asniplist | wc -w)
networksv6=$(IFS=' '; echo $asniplistv6 | wc -w)
totnetworks=$((networksv4 + networksv6))
#echo "New: $networks"
#echo "New: $networks"
#echo "Start generating .tpl file"
cat<<EOF>$tpldir/$asn.tpl
;################################################################################
;# $asn - $provider, $country
;# Total of $totnetworks networks assigned to this ASN number
;# IPv4:$networksv4 IPv6:$networksv6
;################################################################################
;# v6:$networksv6 networks
$(echo $asniplistv6 | awk -F, '{print }' RS='[[:space:]]+')
;################################################################################
;# v4:$networksv4 networks
$(echo $asniplist | awk -F, '{print }' RS='[[:space:]]+')
;################################################################################
EOF
# Old EOF lines
#$(echo $asniplistv6) | awk -F, '{print }' RS='[[:space:]]+')
#$(echo $asniplist) | awk -F, '{print }' RS='[[:space:]]+')

#cat $tmpdir/$asn.tmp | grep -E -o '([0-9]{1,3}\.){3}[0-9]{1,3}/[0-9]{1,2}' | sort -V >> $tpldir/$asn.tpl
# Removed 20240821
#ln -fs -T $tpldir/$asn.tpl $providerdir/"$country - $asn - $provider"
#echo "End generating .tpl file"
#echo "ASN | Networks | Country | Provider" > $ipfile.table
#(printf "PERM LINKS OWNER GROUP SIZE MONTH DAY HH:MM/YEAR NAME\n" \
#           ; ls -l | sed 1d) | column -t
echo "\"$asn\"|\"$totnetworks\"|\"$country\"|\"$provider\"" > $tabledir/$asn.table
#cat $tabledir/$asn.table >> $tabledir/AS.table
# Remove temp dir/file
#echo "Removing workdir: $tmpdir"
#rm -rf $tmpdir
# Auto remove using trap (See above)
